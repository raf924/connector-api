// Code generated by capnpc-go. DO NOT EDIT.

package connector

import (
	context "golang.org/x/net/context"
	capnp "zombiezen.com/go/capnproto2"
	text "zombiezen.com/go/capnproto2/encoding/text"
	schemas "zombiezen.com/go/capnproto2/schemas"
	server "zombiezen.com/go/capnproto2/server"
)

type Connector struct{ Client capnp.Client }

// Connector_TypeID is the unique identifier for the type Connector.
const Connector_TypeID = 0xc33ee7505f042b8e

func (c Connector) Register(ctx context.Context, params func(Connector_register_Params) error, opts ...capnp.CallOption) Connector_register_Results_Promise {
	if c.Client == nil {
		return Connector_register_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xc33ee7505f042b8e,
			MethodID:      0,
			InterfaceName: "connector.capnp:Connector",
			MethodName:    "register",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Connector_register_Params{Struct: s}) }
	}
	return Connector_register_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Connector) Send(ctx context.Context, params func(Connector_send_Params) error, opts ...capnp.CallOption) Connector_send_Results_Promise {
	if c.Client == nil {
		return Connector_send_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xc33ee7505f042b8e,
			MethodID:      1,
			InterfaceName: "connector.capnp:Connector",
			MethodName:    "send",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Connector_send_Params{Struct: s}) }
	}
	return Connector_send_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Connector) MessageStream(ctx context.Context, params func(Connector_messageStream_Params) error, opts ...capnp.CallOption) Connector_messageStream_Results_Promise {
	if c.Client == nil {
		return Connector_messageStream_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xc33ee7505f042b8e,
			MethodID:      2,
			InterfaceName: "connector.capnp:Connector",
			MethodName:    "messageStream",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Connector_messageStream_Params{Struct: s}) }
	}
	return Connector_messageStream_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Connector) CommandStream(ctx context.Context, params func(Connector_commandStream_Params) error, opts ...capnp.CallOption) Connector_commandStream_Results_Promise {
	if c.Client == nil {
		return Connector_commandStream_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xc33ee7505f042b8e,
			MethodID:      3,
			InterfaceName: "connector.capnp:Connector",
			MethodName:    "commandStream",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Connector_commandStream_Params{Struct: s}) }
	}
	return Connector_commandStream_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Connector) EventStream(ctx context.Context, params func(Connector_eventStream_Params) error, opts ...capnp.CallOption) Connector_eventStream_Results_Promise {
	if c.Client == nil {
		return Connector_eventStream_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xc33ee7505f042b8e,
			MethodID:      4,
			InterfaceName: "connector.capnp:Connector",
			MethodName:    "eventStream",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Connector_eventStream_Params{Struct: s}) }
	}
	return Connector_eventStream_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}

type Connector_Server interface {
	Register(Connector_register) error

	Send(Connector_send) error

	MessageStream(Connector_messageStream) error

	CommandStream(Connector_commandStream) error

	EventStream(Connector_eventStream) error
}

func Connector_ServerToClient(s Connector_Server) Connector {
	c, _ := s.(server.Closer)
	return Connector{Client: server.New(Connector_Methods(nil, s), c)}
}

func Connector_Methods(methods []server.Method, s Connector_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 5)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xc33ee7505f042b8e,
			MethodID:      0,
			InterfaceName: "connector.capnp:Connector",
			MethodName:    "register",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Connector_register{c, opts, Connector_register_Params{Struct: p}, Connector_register_Results{Struct: r}}
			return s.Register(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xc33ee7505f042b8e,
			MethodID:      1,
			InterfaceName: "connector.capnp:Connector",
			MethodName:    "send",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Connector_send{c, opts, Connector_send_Params{Struct: p}, Connector_send_Results{Struct: r}}
			return s.Send(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xc33ee7505f042b8e,
			MethodID:      2,
			InterfaceName: "connector.capnp:Connector",
			MethodName:    "messageStream",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Connector_messageStream{c, opts, Connector_messageStream_Params{Struct: p}, Connector_messageStream_Results{Struct: r}}
			return s.MessageStream(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xc33ee7505f042b8e,
			MethodID:      3,
			InterfaceName: "connector.capnp:Connector",
			MethodName:    "commandStream",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Connector_commandStream{c, opts, Connector_commandStream_Params{Struct: p}, Connector_commandStream_Results{Struct: r}}
			return s.CommandStream(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xc33ee7505f042b8e,
			MethodID:      4,
			InterfaceName: "connector.capnp:Connector",
			MethodName:    "eventStream",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Connector_eventStream{c, opts, Connector_eventStream_Params{Struct: p}, Connector_eventStream_Results{Struct: r}}
			return s.EventStream(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	return methods
}

// Connector_register holds the arguments for a server call to Connector.register.
type Connector_register struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Connector_register_Params
	Results Connector_register_Results
}

// Connector_send holds the arguments for a server call to Connector.send.
type Connector_send struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Connector_send_Params
	Results Connector_send_Results
}

// Connector_messageStream holds the arguments for a server call to Connector.messageStream.
type Connector_messageStream struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Connector_messageStream_Params
	Results Connector_messageStream_Results
}

// Connector_commandStream holds the arguments for a server call to Connector.commandStream.
type Connector_commandStream struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Connector_commandStream_Params
	Results Connector_commandStream_Results
}

// Connector_eventStream holds the arguments for a server call to Connector.eventStream.
type Connector_eventStream struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Connector_eventStream_Params
	Results Connector_eventStream_Results
}

type Connector_Receiver struct{ Client capnp.Client }

// Connector_Receiver_TypeID is the unique identifier for the type Connector_Receiver.
const Connector_Receiver_TypeID = 0x829e954f1fbeabaf

func (c Connector_Receiver) Receive(ctx context.Context, params func(Connector_Receiver_receive_Params) error, opts ...capnp.CallOption) Connector_Receiver_receive_Results_Promise {
	if c.Client == nil {
		return Connector_Receiver_receive_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x829e954f1fbeabaf,
			MethodID:      0,
			InterfaceName: "connector.capnp:Connector.Receiver",
			MethodName:    "receive",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Connector_Receiver_receive_Params{Struct: s}) }
	}
	return Connector_Receiver_receive_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}

type Connector_Receiver_Server interface {
	Receive(Connector_Receiver_receive) error
}

func Connector_Receiver_ServerToClient(s Connector_Receiver_Server) Connector_Receiver {
	c, _ := s.(server.Closer)
	return Connector_Receiver{Client: server.New(Connector_Receiver_Methods(nil, s), c)}
}

func Connector_Receiver_Methods(methods []server.Method, s Connector_Receiver_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 1)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x829e954f1fbeabaf,
			MethodID:      0,
			InterfaceName: "connector.capnp:Connector.Receiver",
			MethodName:    "receive",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Connector_Receiver_receive{c, opts, Connector_Receiver_receive_Params{Struct: p}, Connector_Receiver_receive_Results{Struct: r}}
			return s.Receive(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	return methods
}

// Connector_Receiver_receive holds the arguments for a server call to Connector_Receiver.receive.
type Connector_Receiver_receive struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Connector_Receiver_receive_Params
	Results Connector_Receiver_receive_Results
}

type Connector_Receiver_receive_Params struct{ capnp.Struct }

// Connector_Receiver_receive_Params_TypeID is the unique identifier for the type Connector_Receiver_receive_Params.
const Connector_Receiver_receive_Params_TypeID = 0xe2673a6acc3195f7

func NewConnector_Receiver_receive_Params(s *capnp.Segment) (Connector_Receiver_receive_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Connector_Receiver_receive_Params{st}, err
}

func NewRootConnector_Receiver_receive_Params(s *capnp.Segment) (Connector_Receiver_receive_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Connector_Receiver_receive_Params{st}, err
}

func ReadRootConnector_Receiver_receive_Params(msg *capnp.Message) (Connector_Receiver_receive_Params, error) {
	root, err := msg.RootPtr()
	return Connector_Receiver_receive_Params{root.Struct()}, err
}

func (s Connector_Receiver_receive_Params) String() string {
	str, _ := text.Marshal(0xe2673a6acc3195f7, s.Struct)
	return str
}

func (s Connector_Receiver_receive_Params) Message() (capnp.Pointer, error) {
	return s.Struct.Pointer(0)
}

func (s Connector_Receiver_receive_Params) HasMessage() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Connector_Receiver_receive_Params) MessagePtr() (capnp.Ptr, error) {
	return s.Struct.Ptr(0)
}

func (s Connector_Receiver_receive_Params) SetMessage(v capnp.Pointer) error {
	return s.Struct.SetPointer(0, v)
}

func (s Connector_Receiver_receive_Params) SetMessagePtr(v capnp.Ptr) error {
	return s.Struct.SetPtr(0, v)
}

// Connector_Receiver_receive_Params_List is a list of Connector_Receiver_receive_Params.
type Connector_Receiver_receive_Params_List struct{ capnp.List }

// NewConnector_Receiver_receive_Params creates a new list of Connector_Receiver_receive_Params.
func NewConnector_Receiver_receive_Params_List(s *capnp.Segment, sz int32) (Connector_Receiver_receive_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Connector_Receiver_receive_Params_List{l}, err
}

func (s Connector_Receiver_receive_Params_List) At(i int) Connector_Receiver_receive_Params {
	return Connector_Receiver_receive_Params{s.List.Struct(i)}
}

func (s Connector_Receiver_receive_Params_List) Set(i int, v Connector_Receiver_receive_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Connector_Receiver_receive_Params_List) String() string {
	str, _ := text.MarshalList(0xe2673a6acc3195f7, s.List)
	return str
}

// Connector_Receiver_receive_Params_Promise is a wrapper for a Connector_Receiver_receive_Params promised by a client call.
type Connector_Receiver_receive_Params_Promise struct{ *capnp.Pipeline }

func (p Connector_Receiver_receive_Params_Promise) Struct() (Connector_Receiver_receive_Params, error) {
	s, err := p.Pipeline.Struct()
	return Connector_Receiver_receive_Params{s}, err
}

func (p Connector_Receiver_receive_Params_Promise) Message() *capnp.Pipeline {
	return p.Pipeline.GetPipeline(0)
}

type Connector_Receiver_receive_Results struct{ capnp.Struct }

// Connector_Receiver_receive_Results_TypeID is the unique identifier for the type Connector_Receiver_receive_Results.
const Connector_Receiver_receive_Results_TypeID = 0xecd9ffd30a858ad5

func NewConnector_Receiver_receive_Results(s *capnp.Segment) (Connector_Receiver_receive_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Connector_Receiver_receive_Results{st}, err
}

func NewRootConnector_Receiver_receive_Results(s *capnp.Segment) (Connector_Receiver_receive_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Connector_Receiver_receive_Results{st}, err
}

func ReadRootConnector_Receiver_receive_Results(msg *capnp.Message) (Connector_Receiver_receive_Results, error) {
	root, err := msg.RootPtr()
	return Connector_Receiver_receive_Results{root.Struct()}, err
}

func (s Connector_Receiver_receive_Results) String() string {
	str, _ := text.Marshal(0xecd9ffd30a858ad5, s.Struct)
	return str
}

// Connector_Receiver_receive_Results_List is a list of Connector_Receiver_receive_Results.
type Connector_Receiver_receive_Results_List struct{ capnp.List }

// NewConnector_Receiver_receive_Results creates a new list of Connector_Receiver_receive_Results.
func NewConnector_Receiver_receive_Results_List(s *capnp.Segment, sz int32) (Connector_Receiver_receive_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Connector_Receiver_receive_Results_List{l}, err
}

func (s Connector_Receiver_receive_Results_List) At(i int) Connector_Receiver_receive_Results {
	return Connector_Receiver_receive_Results{s.List.Struct(i)}
}

func (s Connector_Receiver_receive_Results_List) Set(i int, v Connector_Receiver_receive_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Connector_Receiver_receive_Results_List) String() string {
	str, _ := text.MarshalList(0xecd9ffd30a858ad5, s.List)
	return str
}

// Connector_Receiver_receive_Results_Promise is a wrapper for a Connector_Receiver_receive_Results promised by a client call.
type Connector_Receiver_receive_Results_Promise struct{ *capnp.Pipeline }

func (p Connector_Receiver_receive_Results_Promise) Struct() (Connector_Receiver_receive_Results, error) {
	s, err := p.Pipeline.Struct()
	return Connector_Receiver_receive_Results{s}, err
}

type Connector_register_Params struct{ capnp.Struct }

// Connector_register_Params_TypeID is the unique identifier for the type Connector_register_Params.
const Connector_register_Params_TypeID = 0xaff12e1715aad85b

func NewConnector_register_Params(s *capnp.Segment) (Connector_register_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Connector_register_Params{st}, err
}

func NewRootConnector_register_Params(s *capnp.Segment) (Connector_register_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Connector_register_Params{st}, err
}

func ReadRootConnector_register_Params(msg *capnp.Message) (Connector_register_Params, error) {
	root, err := msg.RootPtr()
	return Connector_register_Params{root.Struct()}, err
}

func (s Connector_register_Params) String() string {
	str, _ := text.Marshal(0xaff12e1715aad85b, s.Struct)
	return str
}

func (s Connector_register_Params) Registration() (RegistrationPacket, error) {
	p, err := s.Struct.Ptr(0)
	return RegistrationPacket{Struct: p.Struct()}, err
}

func (s Connector_register_Params) HasRegistration() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Connector_register_Params) SetRegistration(v RegistrationPacket) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewRegistration sets the registration field to a newly
// allocated RegistrationPacket struct, preferring placement in s's segment.
func (s Connector_register_Params) NewRegistration() (RegistrationPacket, error) {
	ss, err := NewRegistrationPacket(s.Struct.Segment())
	if err != nil {
		return RegistrationPacket{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// Connector_register_Params_List is a list of Connector_register_Params.
type Connector_register_Params_List struct{ capnp.List }

// NewConnector_register_Params creates a new list of Connector_register_Params.
func NewConnector_register_Params_List(s *capnp.Segment, sz int32) (Connector_register_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Connector_register_Params_List{l}, err
}

func (s Connector_register_Params_List) At(i int) Connector_register_Params {
	return Connector_register_Params{s.List.Struct(i)}
}

func (s Connector_register_Params_List) Set(i int, v Connector_register_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Connector_register_Params_List) String() string {
	str, _ := text.MarshalList(0xaff12e1715aad85b, s.List)
	return str
}

// Connector_register_Params_Promise is a wrapper for a Connector_register_Params promised by a client call.
type Connector_register_Params_Promise struct{ *capnp.Pipeline }

func (p Connector_register_Params_Promise) Struct() (Connector_register_Params, error) {
	s, err := p.Pipeline.Struct()
	return Connector_register_Params{s}, err
}

func (p Connector_register_Params_Promise) Registration() RegistrationPacket_Promise {
	return RegistrationPacket_Promise{Pipeline: p.Pipeline.GetPipeline(0)}
}

type Connector_register_Results struct{ capnp.Struct }

// Connector_register_Results_TypeID is the unique identifier for the type Connector_register_Results.
const Connector_register_Results_TypeID = 0xd25ce5887117e8d6

func NewConnector_register_Results(s *capnp.Segment) (Connector_register_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Connector_register_Results{st}, err
}

func NewRootConnector_register_Results(s *capnp.Segment) (Connector_register_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Connector_register_Results{st}, err
}

func ReadRootConnector_register_Results(msg *capnp.Message) (Connector_register_Results, error) {
	root, err := msg.RootPtr()
	return Connector_register_Results{root.Struct()}, err
}

func (s Connector_register_Results) String() string {
	str, _ := text.Marshal(0xd25ce5887117e8d6, s.Struct)
	return str
}

func (s Connector_register_Results) Confirmation() (ConfirmationPacket, error) {
	p, err := s.Struct.Ptr(0)
	return ConfirmationPacket{Struct: p.Struct()}, err
}

func (s Connector_register_Results) HasConfirmation() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Connector_register_Results) SetConfirmation(v ConfirmationPacket) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewConfirmation sets the confirmation field to a newly
// allocated ConfirmationPacket struct, preferring placement in s's segment.
func (s Connector_register_Results) NewConfirmation() (ConfirmationPacket, error) {
	ss, err := NewConfirmationPacket(s.Struct.Segment())
	if err != nil {
		return ConfirmationPacket{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// Connector_register_Results_List is a list of Connector_register_Results.
type Connector_register_Results_List struct{ capnp.List }

// NewConnector_register_Results creates a new list of Connector_register_Results.
func NewConnector_register_Results_List(s *capnp.Segment, sz int32) (Connector_register_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Connector_register_Results_List{l}, err
}

func (s Connector_register_Results_List) At(i int) Connector_register_Results {
	return Connector_register_Results{s.List.Struct(i)}
}

func (s Connector_register_Results_List) Set(i int, v Connector_register_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Connector_register_Results_List) String() string {
	str, _ := text.MarshalList(0xd25ce5887117e8d6, s.List)
	return str
}

// Connector_register_Results_Promise is a wrapper for a Connector_register_Results promised by a client call.
type Connector_register_Results_Promise struct{ *capnp.Pipeline }

func (p Connector_register_Results_Promise) Struct() (Connector_register_Results, error) {
	s, err := p.Pipeline.Struct()
	return Connector_register_Results{s}, err
}

func (p Connector_register_Results_Promise) Confirmation() ConfirmationPacket_Promise {
	return ConfirmationPacket_Promise{Pipeline: p.Pipeline.GetPipeline(0)}
}

type Connector_send_Params struct{ capnp.Struct }

// Connector_send_Params_TypeID is the unique identifier for the type Connector_send_Params.
const Connector_send_Params_TypeID = 0xcf4c4934b3eb5031

func NewConnector_send_Params(s *capnp.Segment) (Connector_send_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Connector_send_Params{st}, err
}

func NewRootConnector_send_Params(s *capnp.Segment) (Connector_send_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Connector_send_Params{st}, err
}

func ReadRootConnector_send_Params(msg *capnp.Message) (Connector_send_Params, error) {
	root, err := msg.RootPtr()
	return Connector_send_Params{root.Struct()}, err
}

func (s Connector_send_Params) String() string {
	str, _ := text.Marshal(0xcf4c4934b3eb5031, s.Struct)
	return str
}

func (s Connector_send_Params) Message() (OutgoingMessagePacket, error) {
	p, err := s.Struct.Ptr(0)
	return OutgoingMessagePacket{Struct: p.Struct()}, err
}

func (s Connector_send_Params) HasMessage() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Connector_send_Params) SetMessage(v OutgoingMessagePacket) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewMessage sets the message field to a newly
// allocated OutgoingMessagePacket struct, preferring placement in s's segment.
func (s Connector_send_Params) NewMessage() (OutgoingMessagePacket, error) {
	ss, err := NewOutgoingMessagePacket(s.Struct.Segment())
	if err != nil {
		return OutgoingMessagePacket{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// Connector_send_Params_List is a list of Connector_send_Params.
type Connector_send_Params_List struct{ capnp.List }

// NewConnector_send_Params creates a new list of Connector_send_Params.
func NewConnector_send_Params_List(s *capnp.Segment, sz int32) (Connector_send_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Connector_send_Params_List{l}, err
}

func (s Connector_send_Params_List) At(i int) Connector_send_Params {
	return Connector_send_Params{s.List.Struct(i)}
}

func (s Connector_send_Params_List) Set(i int, v Connector_send_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Connector_send_Params_List) String() string {
	str, _ := text.MarshalList(0xcf4c4934b3eb5031, s.List)
	return str
}

// Connector_send_Params_Promise is a wrapper for a Connector_send_Params promised by a client call.
type Connector_send_Params_Promise struct{ *capnp.Pipeline }

func (p Connector_send_Params_Promise) Struct() (Connector_send_Params, error) {
	s, err := p.Pipeline.Struct()
	return Connector_send_Params{s}, err
}

func (p Connector_send_Params_Promise) Message() OutgoingMessagePacket_Promise {
	return OutgoingMessagePacket_Promise{Pipeline: p.Pipeline.GetPipeline(0)}
}

type Connector_send_Results struct{ capnp.Struct }

// Connector_send_Results_TypeID is the unique identifier for the type Connector_send_Results.
const Connector_send_Results_TypeID = 0xab656055836d1eb7

func NewConnector_send_Results(s *capnp.Segment) (Connector_send_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Connector_send_Results{st}, err
}

func NewRootConnector_send_Results(s *capnp.Segment) (Connector_send_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Connector_send_Results{st}, err
}

func ReadRootConnector_send_Results(msg *capnp.Message) (Connector_send_Results, error) {
	root, err := msg.RootPtr()
	return Connector_send_Results{root.Struct()}, err
}

func (s Connector_send_Results) String() string {
	str, _ := text.Marshal(0xab656055836d1eb7, s.Struct)
	return str
}

// Connector_send_Results_List is a list of Connector_send_Results.
type Connector_send_Results_List struct{ capnp.List }

// NewConnector_send_Results creates a new list of Connector_send_Results.
func NewConnector_send_Results_List(s *capnp.Segment, sz int32) (Connector_send_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Connector_send_Results_List{l}, err
}

func (s Connector_send_Results_List) At(i int) Connector_send_Results {
	return Connector_send_Results{s.List.Struct(i)}
}

func (s Connector_send_Results_List) Set(i int, v Connector_send_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Connector_send_Results_List) String() string {
	str, _ := text.MarshalList(0xab656055836d1eb7, s.List)
	return str
}

// Connector_send_Results_Promise is a wrapper for a Connector_send_Results promised by a client call.
type Connector_send_Results_Promise struct{ *capnp.Pipeline }

func (p Connector_send_Results_Promise) Struct() (Connector_send_Results, error) {
	s, err := p.Pipeline.Struct()
	return Connector_send_Results{s}, err
}

type Connector_messageStream_Params struct{ capnp.Struct }

// Connector_messageStream_Params_TypeID is the unique identifier for the type Connector_messageStream_Params.
const Connector_messageStream_Params_TypeID = 0x9f48fb060a5a217a

func NewConnector_messageStream_Params(s *capnp.Segment) (Connector_messageStream_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Connector_messageStream_Params{st}, err
}

func NewRootConnector_messageStream_Params(s *capnp.Segment) (Connector_messageStream_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Connector_messageStream_Params{st}, err
}

func ReadRootConnector_messageStream_Params(msg *capnp.Message) (Connector_messageStream_Params, error) {
	root, err := msg.RootPtr()
	return Connector_messageStream_Params{root.Struct()}, err
}

func (s Connector_messageStream_Params) String() string {
	str, _ := text.Marshal(0x9f48fb060a5a217a, s.Struct)
	return str
}

func (s Connector_messageStream_Params) Receiver() Connector_Receiver {
	p, _ := s.Struct.Ptr(0)
	return Connector_Receiver{Client: p.Interface().Client()}
}

func (s Connector_messageStream_Params) HasReceiver() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Connector_messageStream_Params) SetReceiver(v Connector_Receiver) error {
	if v.Client == nil {
		return s.Struct.SetPtr(0, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(v.Client))
	return s.Struct.SetPtr(0, in.ToPtr())
}

// Connector_messageStream_Params_List is a list of Connector_messageStream_Params.
type Connector_messageStream_Params_List struct{ capnp.List }

// NewConnector_messageStream_Params creates a new list of Connector_messageStream_Params.
func NewConnector_messageStream_Params_List(s *capnp.Segment, sz int32) (Connector_messageStream_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Connector_messageStream_Params_List{l}, err
}

func (s Connector_messageStream_Params_List) At(i int) Connector_messageStream_Params {
	return Connector_messageStream_Params{s.List.Struct(i)}
}

func (s Connector_messageStream_Params_List) Set(i int, v Connector_messageStream_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Connector_messageStream_Params_List) String() string {
	str, _ := text.MarshalList(0x9f48fb060a5a217a, s.List)
	return str
}

// Connector_messageStream_Params_Promise is a wrapper for a Connector_messageStream_Params promised by a client call.
type Connector_messageStream_Params_Promise struct{ *capnp.Pipeline }

func (p Connector_messageStream_Params_Promise) Struct() (Connector_messageStream_Params, error) {
	s, err := p.Pipeline.Struct()
	return Connector_messageStream_Params{s}, err
}

func (p Connector_messageStream_Params_Promise) Receiver() Connector_Receiver {
	return Connector_Receiver{Client: p.Pipeline.GetPipeline(0).Client()}
}

type Connector_messageStream_Results struct{ capnp.Struct }

// Connector_messageStream_Results_TypeID is the unique identifier for the type Connector_messageStream_Results.
const Connector_messageStream_Results_TypeID = 0xfc917b8b65469a65

func NewConnector_messageStream_Results(s *capnp.Segment) (Connector_messageStream_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Connector_messageStream_Results{st}, err
}

func NewRootConnector_messageStream_Results(s *capnp.Segment) (Connector_messageStream_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Connector_messageStream_Results{st}, err
}

func ReadRootConnector_messageStream_Results(msg *capnp.Message) (Connector_messageStream_Results, error) {
	root, err := msg.RootPtr()
	return Connector_messageStream_Results{root.Struct()}, err
}

func (s Connector_messageStream_Results) String() string {
	str, _ := text.Marshal(0xfc917b8b65469a65, s.Struct)
	return str
}

// Connector_messageStream_Results_List is a list of Connector_messageStream_Results.
type Connector_messageStream_Results_List struct{ capnp.List }

// NewConnector_messageStream_Results creates a new list of Connector_messageStream_Results.
func NewConnector_messageStream_Results_List(s *capnp.Segment, sz int32) (Connector_messageStream_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Connector_messageStream_Results_List{l}, err
}

func (s Connector_messageStream_Results_List) At(i int) Connector_messageStream_Results {
	return Connector_messageStream_Results{s.List.Struct(i)}
}

func (s Connector_messageStream_Results_List) Set(i int, v Connector_messageStream_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Connector_messageStream_Results_List) String() string {
	str, _ := text.MarshalList(0xfc917b8b65469a65, s.List)
	return str
}

// Connector_messageStream_Results_Promise is a wrapper for a Connector_messageStream_Results promised by a client call.
type Connector_messageStream_Results_Promise struct{ *capnp.Pipeline }

func (p Connector_messageStream_Results_Promise) Struct() (Connector_messageStream_Results, error) {
	s, err := p.Pipeline.Struct()
	return Connector_messageStream_Results{s}, err
}

type Connector_commandStream_Params struct{ capnp.Struct }

// Connector_commandStream_Params_TypeID is the unique identifier for the type Connector_commandStream_Params.
const Connector_commandStream_Params_TypeID = 0xac8c99113ca0f913

func NewConnector_commandStream_Params(s *capnp.Segment) (Connector_commandStream_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Connector_commandStream_Params{st}, err
}

func NewRootConnector_commandStream_Params(s *capnp.Segment) (Connector_commandStream_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Connector_commandStream_Params{st}, err
}

func ReadRootConnector_commandStream_Params(msg *capnp.Message) (Connector_commandStream_Params, error) {
	root, err := msg.RootPtr()
	return Connector_commandStream_Params{root.Struct()}, err
}

func (s Connector_commandStream_Params) String() string {
	str, _ := text.Marshal(0xac8c99113ca0f913, s.Struct)
	return str
}

func (s Connector_commandStream_Params) Receiver() Connector_Receiver {
	p, _ := s.Struct.Ptr(0)
	return Connector_Receiver{Client: p.Interface().Client()}
}

func (s Connector_commandStream_Params) HasReceiver() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Connector_commandStream_Params) SetReceiver(v Connector_Receiver) error {
	if v.Client == nil {
		return s.Struct.SetPtr(0, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(v.Client))
	return s.Struct.SetPtr(0, in.ToPtr())
}

// Connector_commandStream_Params_List is a list of Connector_commandStream_Params.
type Connector_commandStream_Params_List struct{ capnp.List }

// NewConnector_commandStream_Params creates a new list of Connector_commandStream_Params.
func NewConnector_commandStream_Params_List(s *capnp.Segment, sz int32) (Connector_commandStream_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Connector_commandStream_Params_List{l}, err
}

func (s Connector_commandStream_Params_List) At(i int) Connector_commandStream_Params {
	return Connector_commandStream_Params{s.List.Struct(i)}
}

func (s Connector_commandStream_Params_List) Set(i int, v Connector_commandStream_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Connector_commandStream_Params_List) String() string {
	str, _ := text.MarshalList(0xac8c99113ca0f913, s.List)
	return str
}

// Connector_commandStream_Params_Promise is a wrapper for a Connector_commandStream_Params promised by a client call.
type Connector_commandStream_Params_Promise struct{ *capnp.Pipeline }

func (p Connector_commandStream_Params_Promise) Struct() (Connector_commandStream_Params, error) {
	s, err := p.Pipeline.Struct()
	return Connector_commandStream_Params{s}, err
}

func (p Connector_commandStream_Params_Promise) Receiver() Connector_Receiver {
	return Connector_Receiver{Client: p.Pipeline.GetPipeline(0).Client()}
}

type Connector_commandStream_Results struct{ capnp.Struct }

// Connector_commandStream_Results_TypeID is the unique identifier for the type Connector_commandStream_Results.
const Connector_commandStream_Results_TypeID = 0xc57c8930e337fae3

func NewConnector_commandStream_Results(s *capnp.Segment) (Connector_commandStream_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Connector_commandStream_Results{st}, err
}

func NewRootConnector_commandStream_Results(s *capnp.Segment) (Connector_commandStream_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Connector_commandStream_Results{st}, err
}

func ReadRootConnector_commandStream_Results(msg *capnp.Message) (Connector_commandStream_Results, error) {
	root, err := msg.RootPtr()
	return Connector_commandStream_Results{root.Struct()}, err
}

func (s Connector_commandStream_Results) String() string {
	str, _ := text.Marshal(0xc57c8930e337fae3, s.Struct)
	return str
}

// Connector_commandStream_Results_List is a list of Connector_commandStream_Results.
type Connector_commandStream_Results_List struct{ capnp.List }

// NewConnector_commandStream_Results creates a new list of Connector_commandStream_Results.
func NewConnector_commandStream_Results_List(s *capnp.Segment, sz int32) (Connector_commandStream_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Connector_commandStream_Results_List{l}, err
}

func (s Connector_commandStream_Results_List) At(i int) Connector_commandStream_Results {
	return Connector_commandStream_Results{s.List.Struct(i)}
}

func (s Connector_commandStream_Results_List) Set(i int, v Connector_commandStream_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Connector_commandStream_Results_List) String() string {
	str, _ := text.MarshalList(0xc57c8930e337fae3, s.List)
	return str
}

// Connector_commandStream_Results_Promise is a wrapper for a Connector_commandStream_Results promised by a client call.
type Connector_commandStream_Results_Promise struct{ *capnp.Pipeline }

func (p Connector_commandStream_Results_Promise) Struct() (Connector_commandStream_Results, error) {
	s, err := p.Pipeline.Struct()
	return Connector_commandStream_Results{s}, err
}

type Connector_eventStream_Params struct{ capnp.Struct }

// Connector_eventStream_Params_TypeID is the unique identifier for the type Connector_eventStream_Params.
const Connector_eventStream_Params_TypeID = 0x9e728027486cc23e

func NewConnector_eventStream_Params(s *capnp.Segment) (Connector_eventStream_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Connector_eventStream_Params{st}, err
}

func NewRootConnector_eventStream_Params(s *capnp.Segment) (Connector_eventStream_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Connector_eventStream_Params{st}, err
}

func ReadRootConnector_eventStream_Params(msg *capnp.Message) (Connector_eventStream_Params, error) {
	root, err := msg.RootPtr()
	return Connector_eventStream_Params{root.Struct()}, err
}

func (s Connector_eventStream_Params) String() string {
	str, _ := text.Marshal(0x9e728027486cc23e, s.Struct)
	return str
}

func (s Connector_eventStream_Params) Receiver() Connector_Receiver {
	p, _ := s.Struct.Ptr(0)
	return Connector_Receiver{Client: p.Interface().Client()}
}

func (s Connector_eventStream_Params) HasReceiver() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Connector_eventStream_Params) SetReceiver(v Connector_Receiver) error {
	if v.Client == nil {
		return s.Struct.SetPtr(0, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(v.Client))
	return s.Struct.SetPtr(0, in.ToPtr())
}

// Connector_eventStream_Params_List is a list of Connector_eventStream_Params.
type Connector_eventStream_Params_List struct{ capnp.List }

// NewConnector_eventStream_Params creates a new list of Connector_eventStream_Params.
func NewConnector_eventStream_Params_List(s *capnp.Segment, sz int32) (Connector_eventStream_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Connector_eventStream_Params_List{l}, err
}

func (s Connector_eventStream_Params_List) At(i int) Connector_eventStream_Params {
	return Connector_eventStream_Params{s.List.Struct(i)}
}

func (s Connector_eventStream_Params_List) Set(i int, v Connector_eventStream_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Connector_eventStream_Params_List) String() string {
	str, _ := text.MarshalList(0x9e728027486cc23e, s.List)
	return str
}

// Connector_eventStream_Params_Promise is a wrapper for a Connector_eventStream_Params promised by a client call.
type Connector_eventStream_Params_Promise struct{ *capnp.Pipeline }

func (p Connector_eventStream_Params_Promise) Struct() (Connector_eventStream_Params, error) {
	s, err := p.Pipeline.Struct()
	return Connector_eventStream_Params{s}, err
}

func (p Connector_eventStream_Params_Promise) Receiver() Connector_Receiver {
	return Connector_Receiver{Client: p.Pipeline.GetPipeline(0).Client()}
}

type Connector_eventStream_Results struct{ capnp.Struct }

// Connector_eventStream_Results_TypeID is the unique identifier for the type Connector_eventStream_Results.
const Connector_eventStream_Results_TypeID = 0xe47e681909b336a3

func NewConnector_eventStream_Results(s *capnp.Segment) (Connector_eventStream_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Connector_eventStream_Results{st}, err
}

func NewRootConnector_eventStream_Results(s *capnp.Segment) (Connector_eventStream_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Connector_eventStream_Results{st}, err
}

func ReadRootConnector_eventStream_Results(msg *capnp.Message) (Connector_eventStream_Results, error) {
	root, err := msg.RootPtr()
	return Connector_eventStream_Results{root.Struct()}, err
}

func (s Connector_eventStream_Results) String() string {
	str, _ := text.Marshal(0xe47e681909b336a3, s.Struct)
	return str
}

// Connector_eventStream_Results_List is a list of Connector_eventStream_Results.
type Connector_eventStream_Results_List struct{ capnp.List }

// NewConnector_eventStream_Results creates a new list of Connector_eventStream_Results.
func NewConnector_eventStream_Results_List(s *capnp.Segment, sz int32) (Connector_eventStream_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Connector_eventStream_Results_List{l}, err
}

func (s Connector_eventStream_Results_List) At(i int) Connector_eventStream_Results {
	return Connector_eventStream_Results{s.List.Struct(i)}
}

func (s Connector_eventStream_Results_List) Set(i int, v Connector_eventStream_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Connector_eventStream_Results_List) String() string {
	str, _ := text.MarshalList(0xe47e681909b336a3, s.List)
	return str
}

// Connector_eventStream_Results_Promise is a wrapper for a Connector_eventStream_Results promised by a client call.
type Connector_eventStream_Results_Promise struct{ *capnp.Pipeline }

func (p Connector_eventStream_Results_Promise) Struct() (Connector_eventStream_Results, error) {
	s, err := p.Pipeline.Struct()
	return Connector_eventStream_Results{s}, err
}

type Server struct{ Client capnp.Client }

// Server_TypeID is the unique identifier for the type Server.
const Server_TypeID = 0xfe0af31607f108a8

func (c Server) Send(ctx context.Context, params func(Server_send_Params) error, opts ...capnp.CallOption) Server_send_Results_Promise {
	if c.Client == nil {
		return Server_send_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xfe0af31607f108a8,
			MethodID:      0,
			InterfaceName: "connector.capnp:Server",
			MethodName:    "send",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Server_send_Params{Struct: s}) }
	}
	return Server_send_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}

type Server_Server interface {
	Send(Server_send) error
}

func Server_ServerToClient(s Server_Server) Server {
	c, _ := s.(server.Closer)
	return Server{Client: server.New(Server_Methods(nil, s), c)}
}

func Server_Methods(methods []server.Method, s Server_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 1)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfe0af31607f108a8,
			MethodID:      0,
			InterfaceName: "connector.capnp:Server",
			MethodName:    "send",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Server_send{c, opts, Server_send_Params{Struct: p}, Server_send_Results{Struct: r}}
			return s.Send(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	return methods
}

// Server_send holds the arguments for a server call to Server.send.
type Server_send struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Server_send_Params
	Results Server_send_Results
}

type Server_Receiver struct{ Client capnp.Client }

// Server_Receiver_TypeID is the unique identifier for the type Server_Receiver.
const Server_Receiver_TypeID = 0xc75d2aae6f719b2e

func (c Server_Receiver) Receive(ctx context.Context, params func(Server_Receiver_receive_Params) error, opts ...capnp.CallOption) Server_Receiver_receive_Results_Promise {
	if c.Client == nil {
		return Server_Receiver_receive_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xc75d2aae6f719b2e,
			MethodID:      0,
			InterfaceName: "connector.capnp:Server.Receiver",
			MethodName:    "receive",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Server_Receiver_receive_Params{Struct: s}) }
	}
	return Server_Receiver_receive_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}

type Server_Receiver_Server interface {
	Receive(Server_Receiver_receive) error
}

func Server_Receiver_ServerToClient(s Server_Receiver_Server) Server_Receiver {
	c, _ := s.(server.Closer)
	return Server_Receiver{Client: server.New(Server_Receiver_Methods(nil, s), c)}
}

func Server_Receiver_Methods(methods []server.Method, s Server_Receiver_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 1)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xc75d2aae6f719b2e,
			MethodID:      0,
			InterfaceName: "connector.capnp:Server.Receiver",
			MethodName:    "receive",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Server_Receiver_receive{c, opts, Server_Receiver_receive_Params{Struct: p}, Server_Receiver_receive_Results{Struct: r}}
			return s.Receive(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	return methods
}

// Server_Receiver_receive holds the arguments for a server call to Server_Receiver.receive.
type Server_Receiver_receive struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Server_Receiver_receive_Params
	Results Server_Receiver_receive_Results
}

type Server_Receiver_receive_Params struct{ capnp.Struct }

// Server_Receiver_receive_Params_TypeID is the unique identifier for the type Server_Receiver_receive_Params.
const Server_Receiver_receive_Params_TypeID = 0xbd4d31a120c0e813

func NewServer_Receiver_receive_Params(s *capnp.Segment) (Server_Receiver_receive_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Server_Receiver_receive_Params{st}, err
}

func NewRootServer_Receiver_receive_Params(s *capnp.Segment) (Server_Receiver_receive_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Server_Receiver_receive_Params{st}, err
}

func ReadRootServer_Receiver_receive_Params(msg *capnp.Message) (Server_Receiver_receive_Params, error) {
	root, err := msg.RootPtr()
	return Server_Receiver_receive_Params{root.Struct()}, err
}

func (s Server_Receiver_receive_Params) String() string {
	str, _ := text.Marshal(0xbd4d31a120c0e813, s.Struct)
	return str
}

func (s Server_Receiver_receive_Params) Message() (capnp.Pointer, error) {
	return s.Struct.Pointer(0)
}

func (s Server_Receiver_receive_Params) HasMessage() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Server_Receiver_receive_Params) MessagePtr() (capnp.Ptr, error) {
	return s.Struct.Ptr(0)
}

func (s Server_Receiver_receive_Params) SetMessage(v capnp.Pointer) error {
	return s.Struct.SetPointer(0, v)
}

func (s Server_Receiver_receive_Params) SetMessagePtr(v capnp.Ptr) error {
	return s.Struct.SetPtr(0, v)
}

// Server_Receiver_receive_Params_List is a list of Server_Receiver_receive_Params.
type Server_Receiver_receive_Params_List struct{ capnp.List }

// NewServer_Receiver_receive_Params creates a new list of Server_Receiver_receive_Params.
func NewServer_Receiver_receive_Params_List(s *capnp.Segment, sz int32) (Server_Receiver_receive_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Server_Receiver_receive_Params_List{l}, err
}

func (s Server_Receiver_receive_Params_List) At(i int) Server_Receiver_receive_Params {
	return Server_Receiver_receive_Params{s.List.Struct(i)}
}

func (s Server_Receiver_receive_Params_List) Set(i int, v Server_Receiver_receive_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Server_Receiver_receive_Params_List) String() string {
	str, _ := text.MarshalList(0xbd4d31a120c0e813, s.List)
	return str
}

// Server_Receiver_receive_Params_Promise is a wrapper for a Server_Receiver_receive_Params promised by a client call.
type Server_Receiver_receive_Params_Promise struct{ *capnp.Pipeline }

func (p Server_Receiver_receive_Params_Promise) Struct() (Server_Receiver_receive_Params, error) {
	s, err := p.Pipeline.Struct()
	return Server_Receiver_receive_Params{s}, err
}

func (p Server_Receiver_receive_Params_Promise) Message() *capnp.Pipeline {
	return p.Pipeline.GetPipeline(0)
}

type Server_Receiver_receive_Results struct{ capnp.Struct }

// Server_Receiver_receive_Results_TypeID is the unique identifier for the type Server_Receiver_receive_Results.
const Server_Receiver_receive_Results_TypeID = 0xf99026af6bfd0405

func NewServer_Receiver_receive_Results(s *capnp.Segment) (Server_Receiver_receive_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Server_Receiver_receive_Results{st}, err
}

func NewRootServer_Receiver_receive_Results(s *capnp.Segment) (Server_Receiver_receive_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Server_Receiver_receive_Results{st}, err
}

func ReadRootServer_Receiver_receive_Results(msg *capnp.Message) (Server_Receiver_receive_Results, error) {
	root, err := msg.RootPtr()
	return Server_Receiver_receive_Results{root.Struct()}, err
}

func (s Server_Receiver_receive_Results) String() string {
	str, _ := text.Marshal(0xf99026af6bfd0405, s.Struct)
	return str
}

// Server_Receiver_receive_Results_List is a list of Server_Receiver_receive_Results.
type Server_Receiver_receive_Results_List struct{ capnp.List }

// NewServer_Receiver_receive_Results creates a new list of Server_Receiver_receive_Results.
func NewServer_Receiver_receive_Results_List(s *capnp.Segment, sz int32) (Server_Receiver_receive_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Server_Receiver_receive_Results_List{l}, err
}

func (s Server_Receiver_receive_Results_List) At(i int) Server_Receiver_receive_Results {
	return Server_Receiver_receive_Results{s.List.Struct(i)}
}

func (s Server_Receiver_receive_Results_List) Set(i int, v Server_Receiver_receive_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Server_Receiver_receive_Results_List) String() string {
	str, _ := text.MarshalList(0xf99026af6bfd0405, s.List)
	return str
}

// Server_Receiver_receive_Results_Promise is a wrapper for a Server_Receiver_receive_Results promised by a client call.
type Server_Receiver_receive_Results_Promise struct{ *capnp.Pipeline }

func (p Server_Receiver_receive_Results_Promise) Struct() (Server_Receiver_receive_Results, error) {
	s, err := p.Pipeline.Struct()
	return Server_Receiver_receive_Results{s}, err
}

type Server_send_Params struct{ capnp.Struct }

// Server_send_Params_TypeID is the unique identifier for the type Server_send_Params.
const Server_send_Params_TypeID = 0xbfd13bf50e16bafb

func NewServer_send_Params(s *capnp.Segment) (Server_send_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Server_send_Params{st}, err
}

func NewRootServer_send_Params(s *capnp.Segment) (Server_send_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Server_send_Params{st}, err
}

func ReadRootServer_send_Params(msg *capnp.Message) (Server_send_Params, error) {
	root, err := msg.RootPtr()
	return Server_send_Params{root.Struct()}, err
}

func (s Server_send_Params) String() string {
	str, _ := text.Marshal(0xbfd13bf50e16bafb, s.Struct)
	return str
}

func (s Server_send_Params) Receiver() Server_Receiver {
	p, _ := s.Struct.Ptr(0)
	return Server_Receiver{Client: p.Interface().Client()}
}

func (s Server_send_Params) HasReceiver() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Server_send_Params) SetReceiver(v Server_Receiver) error {
	if v.Client == nil {
		return s.Struct.SetPtr(0, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(v.Client))
	return s.Struct.SetPtr(0, in.ToPtr())
}

// Server_send_Params_List is a list of Server_send_Params.
type Server_send_Params_List struct{ capnp.List }

// NewServer_send_Params creates a new list of Server_send_Params.
func NewServer_send_Params_List(s *capnp.Segment, sz int32) (Server_send_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Server_send_Params_List{l}, err
}

func (s Server_send_Params_List) At(i int) Server_send_Params {
	return Server_send_Params{s.List.Struct(i)}
}

func (s Server_send_Params_List) Set(i int, v Server_send_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Server_send_Params_List) String() string {
	str, _ := text.MarshalList(0xbfd13bf50e16bafb, s.List)
	return str
}

// Server_send_Params_Promise is a wrapper for a Server_send_Params promised by a client call.
type Server_send_Params_Promise struct{ *capnp.Pipeline }

func (p Server_send_Params_Promise) Struct() (Server_send_Params, error) {
	s, err := p.Pipeline.Struct()
	return Server_send_Params{s}, err
}

func (p Server_send_Params_Promise) Receiver() Server_Receiver {
	return Server_Receiver{Client: p.Pipeline.GetPipeline(0).Client()}
}

type Server_send_Results struct{ capnp.Struct }

// Server_send_Results_TypeID is the unique identifier for the type Server_send_Results.
const Server_send_Results_TypeID = 0xc1c97328201467a0

func NewServer_send_Results(s *capnp.Segment) (Server_send_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Server_send_Results{st}, err
}

func NewRootServer_send_Results(s *capnp.Segment) (Server_send_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Server_send_Results{st}, err
}

func ReadRootServer_send_Results(msg *capnp.Message) (Server_send_Results, error) {
	root, err := msg.RootPtr()
	return Server_send_Results{root.Struct()}, err
}

func (s Server_send_Results) String() string {
	str, _ := text.Marshal(0xc1c97328201467a0, s.Struct)
	return str
}

// Server_send_Results_List is a list of Server_send_Results.
type Server_send_Results_List struct{ capnp.List }

// NewServer_send_Results creates a new list of Server_send_Results.
func NewServer_send_Results_List(s *capnp.Segment, sz int32) (Server_send_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Server_send_Results_List{l}, err
}

func (s Server_send_Results_List) At(i int) Server_send_Results {
	return Server_send_Results{s.List.Struct(i)}
}

func (s Server_send_Results_List) Set(i int, v Server_send_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Server_send_Results_List) String() string {
	str, _ := text.MarshalList(0xc1c97328201467a0, s.List)
	return str
}

// Server_send_Results_Promise is a wrapper for a Server_send_Results promised by a client call.
type Server_send_Results_Promise struct{ *capnp.Pipeline }

func (p Server_send_Results_Promise) Struct() (Server_send_Results, error) {
	s, err := p.Pipeline.Struct()
	return Server_send_Results{s}, err
}

const schema_962b7a64e96c7802 = "x\xda\xbcV]h\x1cU\x14>g\xe6\xceL\x13\x1a" +
	"\xb3\xb7\x93t5\xa8I5hm1$\xa6U\x88\xda" +
	"\xfc\x14L\x1a,\xcel\xf1\xa1\xd1\xa0\xeb\xe6\x9al\xcc" +
	"\xec6\xb3\x9b \xa96R\x15\x8d\x8aX%E+\xd6" +
	"\x8a(j\xa5i(A,\xd4_\xaa\x16\x0ab4\xc5" +
	">j\xd5\xb4T\x91 \"\xb5\xea\xc8\xbd\xb3\xf3\x93\xed" +
	"n\x12\x1f\xec\xdb\xee\xbd\xdf\xb9\xe7\xbb\xdf=\xe7;S" +
	"\xbf[j\x91\x1a\x94Y\x15\xc04\x14\xd5\x99\xd8\xffA" +
	"\xf5\x1d\xe3{w\x02\xad\x92\x9dg\xd7\x92{\x8c\xd9\x0d" +
	"\x9f\x02@\x04\x1b\xb7\xcaU\xa8'e\x0d@gr\xbb" +
	">%k\xfa\x94\\\xeel\xf8d\xa0\xe3\xdaG\xec\xbd" +
	"@\xab\x10@A\x0d\xa0\xf1m\xb9\x1f\x01\xf5)\xb9\x19" +
	"\xd0\x19Y\xd5U\xaa\x9e\xefx5\x0c(!#\x1cP" +
	"I8\xe0\xbd+\xadG\xef\xbc\x97\xedw\x01\x84\xef'" +
	"I\x13\x02q\xf4s\xfbn\xa1/=\xf3n8\xd4t" +
	"C\xbbE\xe8]\xdf\xbeS\x19\xad\x9b\x9b\x08\x03&I" +
	"\x8c\x03\x8e\x08\x80~\xfa\xa3\x9a\xd7\x1a6\x1f\x01Z\xe3" +
	"\x02\"\xd8\xf8\x9d{\xc2/\x02p\xfe\xf0\xcaK~\xbf" +
	"\xf9\xab\x0f\x81F\xfd\x13\xca\x94*\xc1N\xe1\x80}\xbd" +
	"\x155\xab3\xc7>v\x01.;\xe5*\xce\xce\x97\x87" +
	"FdGzp\xe0L\xcf\xc8\xda\xdd\x00\xa8\x9b\xca\xb4" +
	"\xde\xadD\x05\xb2\x1d\xf5VU\x03pN\xfdy\xd3\xa9" +
	"\xfa\xb1\x87\x8e\x86ny\x9d\xba\x93\x9fS\xf7\xf2`\xfa" +
	"\xc0\x9a\xee\xcf\x81Fe\xe7\xades\xda\xca\xdfJ\xff" +
	"q5\xafT%\xd4W\xf1x\xfd\x0a\xb5]\xb7TM" +
	"\xb7\xd4r\xa7\xc18{h\xdd\xa6\xdb\xbf\x0c_;\xae" +
	"\xde\xc0I'UN\xfa\xc4\xe9\xe8\xe0\x93?\xde=\x1d" +
	"\x06\x8c\xa9]\x1c0.\x00\x7f\x8c7\x1c\xefo\xea\xfd" +
	"\x1e\xe8\xd5\xbe.\xef\xab\xcfs\xc01\x01x\xfd\xc6C" +
	"%\x97\xf5\xed\xf8!D\xf7\x8cjs\xba3O=^" +
	"\xfa\xb5s\xf2g7\x94\xf0\xc8\x19u\x0f\xdfQ\xc8\xdf" +
	"\x0fL\\\xf3\xdc9Wl\xb1s\xd4\xbd\"\xdbs\x1b" +
	"{z\xfb\xae\xbfB\xa7M\xba;\xfe}\xf3E|E" +
	"=\xac\xbf\xa1F\x01\xf4I\xb5]?)4L\xa4S" +
	")\x96\xc8\xa6e\xbb.\x11\xdf\x96\xda\xd6\xb41\xb7`" +
	"\xd7\xc5X\x82%\x87ef\x1b\x88&\x91\x15\x00\xff\x8e" +
	"\xe81\xa6\xb4\x0d\xa0u9\xb6^\x8e\xf4zm\xd4\x16" +
	"!\x8cb\xb5I$\x0cJ\x1f\x11\xa0\xe0b\x0b\x1a\x88" +
	"\xad\x04)\xb6\x8dnf\x99L\xbc\x97\xf9\x94\xc8\x85\x94" +
	"\xd80Ke\xb7dm\x16\xb7j\x8dx\xb9\x1d\xb72" +
	"&\x91\x09\x00\xe1\x09\xca:\x01\xcc\xe52\x9a\x1d\x12:" +
	"9*6\x00 \x0d\x92\xf2\x94\x170\xe1\xe4\xa2&A" +
	"D4d\xc4\x88s|G\x87\xf4\xcd\xd0\xaf'\x00\x10" +
	")\xe0B\x94,\x97u\x8eT\xb3\x11\xff\xdfH\x1d\x9c" +
	"(\x936\xae^w0\x9fT\x81\xa7\xcb\xb0TOm" +
	"\xac\x99e\x86\x06\xb2\x99\x85\xd8'\xd2\x96\x15O\xf5\\" +
	"\x04\xf6\xd6\x8bUg\x0f\xe8]3K\x90\xd4f\xbd\xc9" +
	"L\x96\xd9\xb5\x82\x0e\xce\xe3\xd3\x9f\xe3s\xa9\xe0\xc3q" +
	"v\x1c\xca\xb3\xc9t\x0a#\xce\x17\xd3?\x8d\x1b[g" +
	"_\xe09\"\x85rla\xf60\xf3*\x9b\xf1L\xe2" +
	"G\xa1\x8b\xb7\x01\x98\xcbd4+$\x1c\xcd\xbd1\xae" +
	"@\x0c\xac\x05\x00W\x14z\x85\\\x0e\xf1\x04\xfcXy" +
	"\xa9\x82\x86N\x0e\x04\x0d-\xfe\xd7r\x08\x13\x89\xb1\xcc" +
	"\x90\x16\xae\x05)_v\xb4\xf9\xe1\xa1i\x85\x9dN," +
	"\xe0gV\x08\x03\xf0\xa6\x03zvHwu\x82D\xc7" +
	"4D\xdfB\xd1\x9b>\xf4\xe15 \xd1A\x0d%\x7f" +
	"b\xa1g[\x94\xd9 \xd1n\x0de\x7f$\xa1\xe7\xe7" +
	"\xd4\xe4{\x9b4$\xfe(D\xcf<\xe9\xad\xf7\x81D" +
	"\xd7k\x8eW$B\xadr~\xc9\x16t\xbcf\x84j" +
	"Q\xd0-\\\x15\xb7\xc0\x83\x15\xcfC@\x13\xff\x0d\x0c" +
	"\xa4+Y\xacAbnGA\"\xd8/TW\x108" +
	"\xa67-\xd1s\xf2\x85\x1d\xd3\x7f\xee\xb0c\xce[\\" +
	"\xc81\x8b9\x81Q\xbd\xa4\xf2\x8e8M\xd1z\xf2\xc4" +
	"co\xce\x15m\xa0\x02M*4\x91\xb3E\xbb4\x91" +
	"N\xdd\x9f\xb4\xad\xa0K?\xdb\xbe\x9e\xf4\xf5M\x8d\xe5" +
	"'Q\x8a\x8d\xa0P\xa3\x16p\x84b\x8d\x1a\xb2\xa2y" +
	"\x8d\xba\xc8X\x89\xb1\xea\xf9\xae\xb9\x14Z\x9e\x06~P" +
	"\xd9b\x8eS\xac\x92\x8a\x0d\x96b\xf8f7\x81\xe8\xdd" +
	"\xe0\xab'\xafw\xddR\xf4\xbe\xcb\xd0\xfb\xfe\xa2\x94\xf7" +
	"\xa7\xa2\xe5\xba\xc7@\xfc7\x00\x00\xff\xff\x984-\xcf"

func init() {
	schemas.Register(schema_962b7a64e96c7802,
		0x829e954f1fbeabaf,
		0x9e728027486cc23e,
		0x9f48fb060a5a217a,
		0xab656055836d1eb7,
		0xac8c99113ca0f913,
		0xaff12e1715aad85b,
		0xbd4d31a120c0e813,
		0xbfd13bf50e16bafb,
		0xc1c97328201467a0,
		0xc33ee7505f042b8e,
		0xc57c8930e337fae3,
		0xc75d2aae6f719b2e,
		0xcf4c4934b3eb5031,
		0xd25ce5887117e8d6,
		0xe2673a6acc3195f7,
		0xe47e681909b336a3,
		0xecd9ffd30a858ad5,
		0xf99026af6bfd0405,
		0xfc917b8b65469a65,
		0xfe0af31607f108a8)
}
